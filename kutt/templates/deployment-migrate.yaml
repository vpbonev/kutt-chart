apiVersion: apps/v1
kind: Deployment
metadata:
  name: kutt-migrate
  labels:
    {{- include "kutt.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "kutt.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kutt.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kutt.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
            # Database Settings
            - name: DB_HOST
              value: {{ include "kutt.postgresql.hostname" . | quote }}
            - name: DB_PORT
              value: {{ include "kutt.postgresql.port" . | quote }}
            - name: DB_NAME
              value: {{ include "kutt.postgresql.database" . | quote }}
            - name: DB_USER
              value: {{ include "kutt.postgresql.username" . | quote }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "kutt.postgresql.secretName" . | quote }}
                  key: {{ include "kutt.postgresql.userPasswordKey" . | quote }}
            - name: DB_SSL
              value: "false"
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.imageMigrate.repository }}:{{ .Values.imageMigrate.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 6000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v2/health
              port: http
          readinessProbe:
            httpGet:
              path: /api/v2/health
              port: http
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
